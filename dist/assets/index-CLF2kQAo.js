import{r as e,a as t}from"./vendor-VIAh7PwP.js";import{B as n,f as i,C as s,i as a,p as r,t as o}from"./ethers-BuRceqJ5.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var l={exports:{}},c={},u=e,d=Symbol.for("react.element"),h=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,b=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,g={key:!0,ref:!0,__self:!0,__source:!0};function p(e,t,n){var i,s={},a=null,r=null;for(i in void 0!==n&&(a=""+n),void 0!==t.key&&(a=""+t.key),void 0!==t.ref&&(r=t.ref),t)m.call(t,i)&&!g.hasOwnProperty(i)&&(s[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===s[i]&&(s[i]=t[i]);return{$$typeof:d,type:e,key:a,ref:r,props:s,_owner:b.current}}c.Fragment=h,c.jsx=p,c.jsxs=p,l.exports=c;var f,x=l.exports,j=t;f=j.createRoot,j.hydrateRoot;const v="0xeC6881Fd6E8818Ec543579B95445eBC7050aF677",w=["function createDistribution(string memory title, uint256 totalBudget, uint256 durationInDays) external","function allocateBonus(uint256 distributionId, address recipient, uint256 amount) external","function claimBonus(uint256 distributionId) external","function finalizeDistribution(uint256 distributionId) external","function setManagerAuthorization(address manager, bool authorized) external","function getDistributionInfo(uint256 distributionId) external view returns (string memory, uint256, bool, bool, uint256, uint256, uint256)","function getBonusStatus(uint256 distributionId, address employee) external view returns (bool, bool, uint256)","function hasReceivedBonus(uint256 distributionId, address recipient) external view returns (bool)","function getCurrentDistributionId() external view returns (uint256)","function isAuthorizedManager(address manager) external view returns (bool)","function getDistributionRecipients(uint256 distributionId) external view returns (address[])","function getMyEncryptedBonus(uint256 distributionId) external view returns (uint256)","function calculateTaxBracket(uint256 amount) external view returns (uint256)","function admin() external view returns (address)","event DistributionCreated(uint256 indexed distributionId, string title, uint256 totalBudget, uint256 deadline)","event BonusAllocated(uint256 indexed distributionId, address indexed recipient)","event BonusClaimed(uint256 indexed distributionId, address indexed recipient)","event DistributionFinalized(uint256 indexed distributionId, uint256 totalDistributed)","event ManagerAuthorized(address indexed manager)","event ManagerRevoked(address indexed manager)"],y={quarterly:{title:"Q4 Performance Bonus",budget:"10.0",duration:"30"},annual:{title:"Annual Achievement Award",budget:"25.0",duration:"45"},project:{title:"Project Completion Bonus",budget:"5.0",duration:"14"},holiday:{title:"Holiday Season Bonus",budget:"15.0",duration:"21"}},C={senior:{amount:"0.5",title:"Senior Developer"},mid:{amount:"0.3",title:"Mid-Level Developer"},junior:{amount:"0.2",title:"Junior Developer"},manager:{amount:"0.8",title:"Team Lead"}},I={senior:"0xeC6881Fd6E8818Ec543579B95445eBC7050aF677",mid:"0xeC6881Fd6E8818Ec543579B95445eBC7050aF677",junior:"0xeC6881Fd6E8818Ec543579B95445eBC7050aF677",manager:"0xeC6881Fd6E8818Ec543579B95445eBC7050aF677"},N="0xaa36a7",D={chainId:N,chainName:"Sepolia Test Network",rpcUrls:["https://sepolia.infura.io/v3/","https://ethereum-sepolia.publicnode.com"],nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},blockExplorerUrls:["https://sepolia.etherscan.io/"]};function A(e){return`${e.slice(0,6)}...${e.slice(-4)}`}function B(e,t){switch(t){case"number":return!isNaN(Number(e))&&Number(e)>0;case"address":return function(e){try{return a(e)}catch{return!1}}(e);case"string":return e.trim().length>0;default:return!1}}const M=({state:e,children:t})=>x.jsx("div",{className:"container",children:x.jsxs("div",{className:"terminal-box",children:[x.jsxs("div",{className:"header",children:[x.jsxs("div",{className:"logo-section",children:[x.jsx("div",{className:"logo",children:"🔐"}),x.jsx("h1",{className:"title",children:"Anonymous Bonus Distribution"}),x.jsx("h2",{className:"subtitle",children:"Team Incentive Privacy System"})]}),x.jsxs("div",{className:"blockchain-info",children:[x.jsxs("p",{children:[x.jsx("strong",{children:"LIVE ON SEPOLIA"})," - Encrypted bonus distribution active!"]}),x.jsxs("p",{children:["Contract: ",x.jsx("span",{className:"highlight",children:A(v)})]})]})]}),e.userAccount&&x.jsxs("div",{className:"user-info",children:[x.jsxs("p",{children:["> Connected: ",x.jsx("span",{className:"highlight",children:A(e.userAccount)})]}),x.jsxs("p",{children:["> Role: ",x.jsx("span",{className:"highlight",children:e.isManager?"👑 Manager":"👤 Employee"})]}),x.jsxs("p",{children:["> Current Distribution: ",x.jsxs("span",{className:"highlight",children:["#",e.currentDistributionId]})]})]}),e.distributionInfo&&x.jsxs("div",{className:"distribution-info",children:[x.jsxs("h3",{children:['> Current Distribution: "',e.distributionInfo.title,'"']}),x.jsxs("p",{children:["> Total Budget: ",x.jsxs("span",{className:"highlight",children:[Number(e.distributionInfo.totalBudget)/1e18," ETH"]})]}),x.jsxs("p",{children:["> Status: ",x.jsx("span",{className:"highlight",children:e.distributionInfo.isActive?"🟢 Active":e.distributionInfo.isFinalized?"✅ Finalized":"⏸️ Inactive"})]}),x.jsxs("p",{children:["> Recipients: ",x.jsx("span",{className:"highlight",children:Number(e.distributionInfo.recipientCount)})]}),x.jsxs("p",{children:["> Deadline: ",x.jsx("span",{className:"highlight",children:new Date(1e3*Number(e.distributionInfo.deadline)).toLocaleDateString()})]}),e.bonusStatus&&x.jsx("div",{className:"bonus-status",children:x.jsxs("p",{children:["> Your Bonus Status:",e.bonusStatus.hasBonus?e.bonusStatus.hasClaimed?x.jsx("span",{className:"highlight",children:" ✅ Claimed"}):x.jsx("span",{className:"highlight",children:" 💰 Available to Claim"}):x.jsx("span",{className:"highlight",children:" ⏳ Not Allocated"})]})})]}),x.jsxs("div",{className:"terminal-text",children:[x.jsx("p",{children:"🌟 Welcome to Anonymous Bonus Distribution System"}),x.jsx("p",{children:"⚡ Powered by Zama's Fully Homomorphic Encryption (FHE)"}),x.jsx("p",{children:"🔒 All bonus amounts are encrypted on-chain"}),x.jsx("p",{children:"👁️ Only recipients can see their bonus amounts"}),x.jsx("p",{children:"🎯 Managers can allocate bonuses without revealing amounts to others"}),x.jsx("p",{children:"🏆 Perfect for confidential team incentive programs"})]}),x.jsx("div",{className:`message-box ${e.message.type}`,children:x.jsxs("p",{children:["> ",e.message.text]})}),x.jsx("div",{className:"main-content",children:t}),x.jsx("div",{className:"footer",children:x.jsx("p",{children:"🔒 Secure • 🕶️ Private • 🌐 Transparent • ⚡ Built with Zama FHE"})})]})}),k=({connectWallet:e,isLoading:t})=>x.jsx("div",{className:"wallet-section",children:x.jsx("button",{className:"button wallet-button "+(t?"loading":""),onClick:e,disabled:t,children:t?"Connecting...":"Connect Wallet"})}),S=({state:t,updateContractInfo:n,setMessage:i,setLoading:s})=>{const[a,l]=e.useState({distributionTitle:"",totalBudget:"",duration:"",selectedDistributionId:"",recipientAddress:"",bonusAmount:"",finalizeDistributionId:""}),c=(e,t)=>{l(n=>({...n,[e]:t}))};return t.isManager?x.jsxs("div",{className:"manager-section",children:[x.jsx("h3",{children:"> Manager Actions"}),x.jsxs("div",{className:"quick-templates",children:[x.jsx("h4",{children:"Quick Templates"}),x.jsx("div",{className:"template-buttons",children:Object.entries(y).map(([e,n])=>x.jsx("button",{className:"button template-btn",onClick:()=>(e=>{const t=y[e];t&&(l(e=>({...e,distributionTitle:t.title,totalBudget:t.budget,duration:t.duration})),i(`Template "${t.title}" applied`,"success"))})(e),disabled:t.isLoading,children:n.title},e))})]}),x.jsxs("div",{className:"form-group",children:[x.jsx("h4",{children:"Create New Distribution"}),x.jsx("input",{className:"input-box",type:"text",placeholder:"Distribution title",value:a.distributionTitle,onChange:e=>c("distributionTitle",e.target.value),disabled:t.isLoading}),x.jsx("input",{className:"input-box",type:"number",placeholder:"Total budget (ETH)",step:"0.01",value:a.totalBudget,onChange:e=>c("totalBudget",e.target.value),disabled:t.isLoading}),x.jsx("input",{className:"input-box",type:"number",placeholder:"Duration (days)",min:"1",max:"365",value:a.duration,onChange:e=>c("duration",e.target.value),disabled:t.isLoading}),x.jsx("button",{className:"button create-button",onClick:async()=>{if(!t.contract||t.isLoading)return;const{distributionTitle:e,totalBudget:s,duration:o}=a;if(!B(e,"string")||!B(s,"number")||!B(o,"number"))return void i("Please fill all fields with valid values!","error");await t.executeTransaction("createDistribution",[e,r(s),parseInt(o)],`Creating distribution "${e}"`)&&(l(e=>({...e,distributionTitle:"",totalBudget:"",duration:""})),await n())},disabled:t.isLoading||!a.distributionTitle||!a.totalBudget||!a.duration,children:t.isLoading?"Creating...":"Create Distribution"})]}),x.jsxs("div",{className:"form-group",children:[x.jsx("h4",{children:"Allocate Encrypted Bonus"}),x.jsxs("select",{className:"input-box",value:a.selectedDistributionId,onChange:e=>c("selectedDistributionId",e.target.value),disabled:t.isLoading,children:[x.jsx("option",{value:"",children:"Select Distribution"}),t.currentDistributionId>0&&x.jsxs("option",{value:t.currentDistributionId,children:["Distribution #",t.currentDistributionId]})]}),x.jsxs("div",{className:"employee-presets",children:[x.jsx("h5",{children:"Employee Presets"}),x.jsx("div",{className:"preset-buttons",children:Object.entries(C).map(([e,n])=>x.jsxs("button",{className:"button preset-btn",onClick:()=>(e=>{const t=C[e],n=I[e];t&&(l(e=>({...e,bonusAmount:t.amount,recipientAddress:n||e.recipientAddress})),i(`Preset for ${t.title} applied (${t.amount} ETH)`,"success"))})(e),disabled:t.isLoading,children:[n.title," (",n.amount," ETH)"]},e))})]}),x.jsx("input",{className:"input-box",type:"text",placeholder:"Employee wallet address",value:a.recipientAddress,onChange:e=>c("recipientAddress",e.target.value),disabled:t.isLoading}),x.jsx("input",{className:"input-box",type:"number",placeholder:"Bonus amount (ETH)",step:"0.01",value:a.bonusAmount,onChange:e=>c("bonusAmount",e.target.value),disabled:t.isLoading}),x.jsx("button",{className:"button allocate-button",onClick:async()=>{if(!t.contract||t.isLoading)return;const{selectedDistributionId:e,recipientAddress:s,bonusAmount:c}=a;if(!B(e,"number")||!B(s,"address")||!B(c,"number"))return void i("Please fill all fields with valid values!","error");const u=r(c),d=o(u,32);await t.executeTransaction("allocateBonus",[parseInt(e),s,d,"0x"],`Allocating encrypted bonus of ${c} ETH to ${s.slice(0,6)}...${s.slice(-4)}`)&&(l(e=>({...e,recipientAddress:"",bonusAmount:""})),await n())},disabled:t.isLoading||!a.selectedDistributionId||!a.recipientAddress||!a.bonusAmount,children:t.isLoading?"Allocating...":"Allocate Encrypted Bonus"})]}),x.jsxs("div",{className:"form-group",children:[x.jsx("h4",{children:"Finalize Distribution"}),x.jsxs("select",{className:"input-box",value:a.finalizeDistributionId,onChange:e=>c("finalizeDistributionId",e.target.value),disabled:t.isLoading,children:[x.jsx("option",{value:"",children:"Select Distribution to Finalize"}),t.currentDistributionId>0&&x.jsxs("option",{value:t.currentDistributionId,children:["Distribution #",t.currentDistributionId]})]}),x.jsx("button",{className:"button finalize-button",onClick:async()=>{if(!t.contract||t.isLoading)return;const{finalizeDistributionId:e}=a;if(!B(e,"number"))return void i("Please select a distribution!","error");await t.executeTransaction("finalizeDistribution",[parseInt(e)],`Finalizing distribution #${e}`)&&await n()},disabled:t.isLoading||!a.finalizeDistributionId,children:t.isLoading?"Finalizing...":"Finalize Distribution"})]})]}):null},E=({state:t,updateContractInfo:n,setMessage:i,setLoading:s})=>{const[a,r]=e.useState(""),o=t.bonusStatus?.hasBonus&&!t.bonusStatus?.hasClaimed,l=t.bonusStatus?.hasBonus;return x.jsxs("div",{className:"employee-section",children:[x.jsx("h3",{children:"> Employee Actions"}),o&&x.jsxs("div",{className:"form-group",children:[x.jsx("h4",{children:"Claim Your Bonus"}),x.jsxs("select",{className:"input-box",value:a,onChange:e=>r(e.target.value),disabled:t.isLoading,children:[x.jsx("option",{value:"",children:"Select Distribution"}),t.currentDistributionId>0&&x.jsxs("option",{value:t.currentDistributionId,children:["Distribution #",t.currentDistributionId]})]}),x.jsx("button",{className:"button claim-button",onClick:async()=>{if(!t.contract||t.isLoading)return;const e=a||t.currentDistributionId.toString();if(!B(e,"number"))return void i("Please select a distribution!","error");await t.executeTransaction("claimBonus",[parseInt(e)],`Claiming your bonus from distribution #${e}`)&&await n()},disabled:t.isLoading,children:t.isLoading?"Claiming...":"Claim My Bonus 💰"})]}),!l&&t.userAccount&&x.jsxs("div",{className:"no-bonus-message",children:[x.jsx("p",{children:"> No bonus allocated to your address in current distribution"}),x.jsx("p",{children:"> Please contact your manager if you believe this is an error"})]}),t.bonusStatus?.hasClaimed&&x.jsxs("div",{className:"claimed-message",children:[x.jsx("p",{children:"> ✅ You have successfully claimed your bonus!"}),x.jsx("p",{children:"> Thank you for your contribution to the team"})]})]})};function L(){const t=(()=>{const[t,i]=e.useState({userAccount:null,contract:null,isManager:!1,currentDistributionId:0,isLoading:!1,distributionInfo:null,bonusStatus:null,message:{text:"Connect MetaMask to access Anonymous Bonus Distribution!",type:"info"}}),[a,r]=e.useState(null),[o,l]=e.useState(null),c=e.useCallback((e,t="info")=>{i(n=>({...n,message:{text:e,type:t}})),"success"===t&&setTimeout(()=>{i(e=>({...e,message:{text:"Ready for next action",type:"info"}}))},5e3)},[]),u=e.useCallback(e=>{i(t=>({...t,isLoading:e}))},[]),d=e.useCallback(()=>!(!window.ethereum||!window.ethereum.isMetaMask)||(c("MetaMask is required! Please install MetaMask browser extension.","error"),!1),[c]),h=e.useCallback(async()=>{try{if(await window.ethereum.request({method:"eth_chainId"})!==N){c("Switching to Sepolia testnet...","info");try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:N}]})}catch(e){if(4902!==e.code)throw e;c("Adding Sepolia network to MetaMask...","info"),await window.ethereum.request({method:"wallet_addEthereumChain",params:[D]})}}return!0}catch(t){return c("Failed to switch to Sepolia network. Please switch manually in MetaMask.","error"),!1}},[c]),m=e.useCallback(async()=>{try{if(!d())return;if(u(!0),c("Connecting to MetaMask..."),0===(await window.ethereum.request({method:"eth_requestAccounts"})).length)return void c("No accounts found. Please create an account in MetaMask.","error");if(!(await h()))return;const t=new n(window.ethereum),a=await t.getSigner(),o=await a.getAddress();0n===await t.getBalance(o)&&c("Your account has no Sepolia ETH. Please get test ETH from a faucet.","warning");const m=new s(v,w,a);try{await m.admin()}catch(e){return void c("Contract not found. Please check if it's deployed on Sepolia.","error")}r(t),l(a),i(e=>({...e,userAccount:o,contract:m})),c("Successfully connected to MetaMask and Sepolia! 🔐","success")}catch(e){4001===e.code?c("Connection rejected by user. Please try again.","warning"):-32002===e.code?c("MetaMask is already processing a request. Please check MetaMask.","warning"):c("Failed to connect to MetaMask. Please try again.","error")}finally{u(!1)}},[d,h,c,u]),b=e.useCallback(async(e,n,i)=>{if(!t.contract||!o)return c("Please connect your wallet first","error"),null;try{u(!0),c(`Preparing ${i}...`);const s=120n*await t.contract[e].estimateGas(...n)/100n;c(`Please confirm the transaction in MetaMask for: ${i}`);const a=await t.contract[e](...n,{gasLimit:s});c(`Transaction submitted! Hash: ${a.hash.slice(0,10)}...`),c("Waiting for transaction confirmation...");const r=await a.wait();return 1===r.status?(c(`${i} completed successfully! 🎉`,"success"),r):(c(`${i} failed. Please try again.`,"error"),null)}catch(s){return 4001===s.code?c("Transaction rejected by user","warning"):-32603===s.code?c("Transaction failed. Please check your balance and try again.","error"):s.message?.includes("insufficient funds")?c("Insufficient Sepolia ETH for gas fees. Please get test ETH from a faucet.","error"):s.message?.includes("user rejected")?c("Transaction cancelled by user","warning"):c(`Transaction failed: ${s.message||"Unknown error"}`,"error"),null}finally{u(!1)}},[t.contract,o,c,u]),g=e.useCallback(async()=>{if(t.contract&&t.userAccount)try{const e=Number(await t.contract.getCurrentDistributionId()),n=await t.contract.isAuthorizedManager(t.userAccount);if(i(t=>({...t,currentDistributionId:e,isManager:n})),e>0){const n=await t.contract.getDistributionInfo(e),s={title:n[0],totalBudget:n[1],isActive:n[2],isFinalized:n[3],createdAt:n[4],deadline:n[5],recipientCount:n[6]},a=await t.contract.getBonusStatus(e,t.userAccount),r={hasBonus:a[0],hasClaimed:a[1],timestamp:a[2]};i(e=>({...e,distributionInfo:s,bonusStatus:r}))}}catch(e){c("Failed to load contract information","error")}},[t.contract,t.userAccount,c]),p=e.useCallback(e=>{0===e.length?(i(e=>({...e,userAccount:null,contract:null,isManager:!1,distributionInfo:null,bonusStatus:null})),r(null),l(null),c("Wallet disconnected","warning")):e[0]!==t.userAccount&&window.location.reload()},[t.userAccount,c]),f=e.useCallback(e=>{e!==N?(c("Please switch back to Sepolia testnet","warning"),i(e=>({...e,contract:null,distributionInfo:null,bonusStatus:null}))):window.location.reload()},[c]);return e.useEffect(()=>{if(window.ethereum)return window.ethereum.on("accountsChanged",p),window.ethereum.on("chainChanged",f),()=>{window.ethereum?.removeListener("accountsChanged",p),window.ethereum?.removeListener("chainChanged",f)}},[p,f]),e.useEffect(()=>{t.contract&&t.userAccount&&g()},[t.contract,t.userAccount,g]),e.useEffect(()=>{(async()=>{if(window.ethereum)try{(await window.ethereum.request({method:"eth_accounts"})).length>0&&m()}catch(e){}})()},[m]),{...t,provider:a,signer:o,connectWallet:m,executeTransaction:b,updateContractInfo:g,setMessage:c,setLoading:u,isMetaMaskInstalled:d()}})();return x.jsx(M,{state:t,children:t.userAccount?x.jsxs(x.Fragment,{children:[x.jsx(S,{state:t,updateContractInfo:t.updateContractInfo,setMessage:t.setMessage,setLoading:t.setLoading}),x.jsx(E,{state:t,updateContractInfo:t.updateContractInfo,setMessage:t.setMessage,setLoading:t.setLoading})]}):x.jsx(k,{connectWallet:t.connectWallet,isLoading:t.isLoading})})}f(document.getElementById("root")).render(x.jsx(e.StrictMode,{children:x.jsx(L,{})}));
